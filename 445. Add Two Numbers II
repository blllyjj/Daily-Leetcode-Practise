/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<Integer> s1 = new Stack<Integer>();
        Stack<Integer> s2 = new Stack<Integer>();
        ListNode dummy = new ListNode(0);
        
        while(l1!=null){
            s1.push(l1.val);
            l1=l1.next;
        }
        while(l2!=null){
            s2.push(l2.val);
            l2=l2.next;
        }
        
        int total=0;
        while(!s1.empty() || !s2.empty()){
            if(!s1.empty()){
                total=total+s1.pop();
            }
            if(!s2.empty()){
                total=total+s2.pop();
            }
            dummy.val=total%10;
            ListNode newNode = new ListNode(total/10);
            newNode.next=dummy;
            dummy=newNode;
            
            total=total/10;
        }
        return dummy.val==0 ? dummy.next : dummy;
    }
}
