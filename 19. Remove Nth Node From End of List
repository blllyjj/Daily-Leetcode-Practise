/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        //first find the list length
        ListNode first=head; //use as a moving pointer
        int length=0;
        ListNode dummy=new ListNode(0);
        dummy.next=head;
        
        while(first!=null){
            length++;
            first=first.next;
        }
        
        //traverse to the (length-n) node and connect it to the (length-n).next.next element
        length=length-n;
        first=dummy;
        while(length>0){
            length=length-1;
            first=first.next;
        }
        first.next=first.next.next;
        return dummy.next;
    }
}
