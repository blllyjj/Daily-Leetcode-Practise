/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode p=l1;
        ListNode q=l2;
        ListNode dummy=new ListNode(0);//dummy list to store the sum
        ListNode curr=dummy; //index for traversing the dummy
        
        int carry=0;//initially carry is 0
        
        while(p!=null||q!=null){
            int x=(p!=null)?p.val:0;
            int y=(q!=null)?q.val:0;
            int sum=(carry+x+y);//initialize a new sum for every loop
            carry=sum/10;//carry will be updated after every loop
            
            curr.next=new ListNode(sum%10);
            curr=curr.next;
            if(p!=null) p=p.next;
            if(q!=null) q=q.next;
        }
        //after this loop we check if a carry exist at the end
        if(carry==1){
            curr.next=new ListNode(1);
        }
        return dummy.next;
    }
}
